<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on ycwang&#39;s Blog</title>
    <link>https://www.ycwang.me/tags/programming/</link>
    <description>Recent content in programming on ycwang&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright © 2020–2021, ycwang all rights reserved.</copyright>
    <lastBuildDate>Sun, 21 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.ycwang.me/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>让编写代码变成习惯</title>
      <link>https://www.ycwang.me/blog/%E8%AE%A9%E7%BC%96%E5%86%99%E4%BB%A3%E7%A0%81%E5%8F%98%E6%88%90%E4%B9%A0%E6%83%AF/</link>
      <pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.ycwang.me/blog/%E8%AE%A9%E7%BC%96%E5%86%99%E4%BB%A3%E7%A0%81%E5%8F%98%E6%88%90%E4%B9%A0%E6%83%AF/</guid>
      <description>今天看了一篇文章 Write Code Every Day，讲的是作者如何管理在 side project 上的时间，颇受启发。
我也有自己的 side project，通常只在周末花几个小时在上面，这种做法有几个问题：
 周末通常会有各种活动，开发时间无法保证。 隔了一周，很容易忘记之前做到哪儿了，用程序术语来说，context switching 的成本很高。 项目进展缓慢，甚至产生焦虑。 为了保证进度，就得在周末投入更多的时间。再也无法愉快地玩游戏或追番了，身心得不到放松，很累。  作者提议，可以尝试改变时间管理的规则：
 每天都为 side project 编写代码，也可以是文档，Blog，或者其它能够推进项目的东西。 必须是有效的代码。诸如改一下缩进，整理一下格式，都是不能作数的。 代码编写应该在午夜（12点）之前完成。工作到太晚，质量会下降。 完成之后要提交到 Github 上面。  作者按照上述规则实践一段时间之后，体会到了很多好处，其中我认为比较有借鉴意义的部分整理如下：
 每一次提交都必须是有效代码，为了做到这一点，作者每天至少要花 30~60 分钟在这上面。 编写代码变成了每天的习惯。不要为了让 Github chart 好看，而做一些表面工作敷衍了事（例如，改两行注释就提交）。你做这些是为了让自己获得提升和满足，而不是为了展示在 GitHub chart 上让别人看。 每天都会继续前一天的工作，思维连贯性更好，context switching 成本低多了。 每天都能感受到项目的进展，这可以消除焦虑。作者认为 the feeling of making progress is just as important as making actual progress ！ 以前如果周末不工作，就意味着两周的空档。现在周末可以轻松一点，没有那么大的压力了。  我打算按照作者的提议尝试一下，希望能有所改进。</description>
    </item>
    
  </channel>
</rss>
